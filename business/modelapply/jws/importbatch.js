// Generated by method-generator.js. DOT NOT MODIFY!ยฃยก

var _ = require('underscore');
var path = require('path');
var jws = require(path.join(process.cwd(), 'utils/jws'));
var appConfig = require('../config.js');
var url = 'http://' + appConfig['dc-analysis'] + '/DI_WS/services/DataImportBatch?wsdl';

module.exports = function (req, res) {
	return {
		

			"BatchRename": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "BatchRename", args, callback, req, res);
			},
			

			"CreateDataType": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "CreateDataType", args, callback, req, res);
			},
			

			"DeleteDataImportBatchInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "DeleteDataImportBatchInfo", args, callback, req, res);
			},
			

			"GetAllBatchInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetAllBatchInfo", args, callback, req, res);
			},
			

			"GetAllDataType": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetAllDataType", args, callback, req, res);
			},
			

			"GetAllDataTypeByDir": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetAllDataTypeByDir", args, callback, req, res);
			},
			

			"GetAllFileInfoByBatchID": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetAllFileInfoByBatchID", args, callback, req, res);
			},
			

			"GetBatchInfoByBatchID": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetBatchInfoByBatchID", args, callback, req, res);
			},
			

			"GetBatchInfoByDataTypeId": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetBatchInfoByDataTypeId", args, callback, req, res);
			},
			

			"GetCodeTable": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetCodeTable", args, callback, req, res);
			},
			

			"GetCodeTableInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetCodeTableInfo", args, callback, req, res);
			},
			

			"GetDataTypeDefineInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetDataTypeDefineInfo", args, callback, req, res);
			},
			

			"GetFileInfoByBatchID": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "GetFileInfoByBatchID", args, callback, req, res);
			},
			

			"JudgeDataTypeModifyType": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "JudgeDataTypeModifyType", args, callback, req, res);
			},
			

			"ModifyDataType": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "ModifyDataType", args, callback, req, res);
			},
			

			"MoveDataTypeDir": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "MoveDataTypeDir", args, callback, req, res);
			},
			

			"RemoveDatatypeById": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "RemoveDatatypeById", args, callback, req, res);
			},
			

			"SetBatchStatus": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "SetBatchStatus", args, callback, req, res);
			},
			

			"SetFileStatusByFileID": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "SetFileStatusByFileID", args, callback, req, res);
			},
			

		url: 'http://' + appConfig['dc-analysis'] + '/DI_WS/services/DataImportBatch?wsdl'
	}

}