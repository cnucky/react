// Generated by method-generator.js. DOT NOT MODIFY!ยฃยก

var _ = require('underscore');
var path = require('path');
var jws = require(path.join(process.cwd(), 'utils/jws'));
var appConfig = require('../config.js');
var url = 'http://' + appConfig['dc-analysis'] + ':8080/CloudTaskCommon/services/StreamSchemeService?wsdl';

module.exports = function (req, res) {
	return {
		

			"createExecuteScheme": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "createExecuteScheme", args, callback, req, res);
			},
			

			"deleteExecuteScheme": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "deleteExecuteScheme", args, callback, req, res);
			},
			

			"getSchemeDetail": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getSchemeDetail", args, callback, req, res);
			},
			

			"getSchemeSummaryList": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getSchemeSummaryList", args, callback, req, res);
			},
			

			"getTaskListBySchemeId": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTaskListBySchemeId", args, callback, req, res);
			},
			

			"getTaskSummaries": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTaskSummaries", args, callback, req, res);
			},
			

			"setSchemeStatus": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "setSchemeStatus", args, callback, req, res);
			},
			

		url: 'http://' + appConfig['dc-analysis'] + ':8080/CloudTaskCommon/services/StreamSchemeService?wsdl'
	}

}