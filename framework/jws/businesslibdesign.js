// Generated by method-generator.js. DOT NOT MODIFY!ยฃยก

var _ = require('underscore');
var path = require('path');
var jws = require(path.join(process.cwd(), 'utils/jws'));
var appConfig = require('../config.js');
var url = 'http://' + appConfig['app-common'] + '/BusinessLib/services/BusinessLibDesignService?wsdl';

module.exports = function (req, res) {
	return {
		

			"AddTableListDefineDetail": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "AddTableListDefineDetail", args, callback, req, res);
			},
			

			"DeleteTableListDefineDetail": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "DeleteTableListDefineDetail", args, callback, req, res);
			},
			

			"UpdateTableListDefineDetail": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "UpdateTableListDefineDetail", args, callback, req, res);
			},
			

			"createTable": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "createTable", args, callback, req, res);
			},
			

			"createTableLayout": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "createTableLayout", args, callback, req, res);
			},
			

			"createTableRecordSummary": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "createTableRecordSummary", args, callback, req, res);
			},
			

			"delVariable": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "delVariable", args, callback, req, res);
			},
			

			"deleteTable": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "deleteTable", args, callback, req, res);
			},
			

			"deleteTableLayout": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "deleteTableLayout", args, callback, req, res);
			},
			

			"deleteTableRecordSummary": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "deleteTableRecordSummary", args, callback, req, res);
			},
			

			"getAllModuleInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getAllModuleInfo", args, callback, req, res);
			},
			

			"getAllProperty": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getAllProperty", args, callback, req, res);
			},
			

			"getDefalutValuePreview": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getDefalutValuePreview", args, callback, req, res);
			},
			

			"getModuleAndFunctionInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getModuleAndFunctionInfo", args, callback, req, res);
			},
			

			"getProcessDefinitions": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getProcessDefinitions", args, callback, req, res);
			},
			

			"getRecordCanStartProcess": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getRecordCanStartProcess", args, callback, req, res);
			},
			

			"getTableDefaultLayOutInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableDefaultLayOutInfo", args, callback, req, res);
			},
			

			"getTableLayoutDetail": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableLayoutDetail", args, callback, req, res);
			},
			

			"getTableLayoutListInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableLayoutListInfo", args, callback, req, res);
			},
			

			"getTableListDefineDetail": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableListDefineDetail", args, callback, req, res);
			},
			

			"getTableListDefineInfos": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableListDefineInfos", args, callback, req, res);
			},
			

			"getTableListInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableListInfo", args, callback, req, res);
			},
			

			"getTableListName": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableListName", args, callback, req, res);
			},
			

			"getTableMetaInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableMetaInfo", args, callback, req, res);
			},
			

			"getTableProcessRelations": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableProcessRelations", args, callback, req, res);
			},
			

			"getTableRecordSummaryDetailInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableRecordSummaryDetailInfo", args, callback, req, res);
			},
			

			"getTableRecordSummaryListInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getTableRecordSummaryListInfo", args, callback, req, res);
			},
			

			"getVariableInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getVariableInfo", args, callback, req, res);
			},
			

			"getVariableListInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getVariableListInfo", args, callback, req, res);
			},
			

			"isDefalutValueDefValid": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "isDefalutValueDefValid", args, callback, req, res);
			},
			

			"preViewTableRecordSummary": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "preViewTableRecordSummary", args, callback, req, res);
			},
			

			"saveVariable": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "saveVariable", args, callback, req, res);
			},
			

			"updateTableLayout": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "updateTableLayout", args, callback, req, res);
			},
			

			"updateTableMetaInfo": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "updateTableMetaInfo", args, callback, req, res);
			},
			

			"updateTableProcessRelations": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "updateTableProcessRelations", args, callback, req, res);
			},
			

			"updateTableRecordSummary": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "updateTableRecordSummary", args, callback, req, res);
			},
			

		url: 'http://' + appConfig['app-common'] + '/BusinessLib/services/BusinessLibDesignService?wsdl'
	}

}