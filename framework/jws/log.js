// Generated by method-generator.js. DOT NOT MODIFY!ยฃยก

var _ = require('underscore');
var path = require('path');
var jws = require(path.join(process.cwd(), 'utils/jws'));
var appConfig = require('../config.js');
var url = 'http://' + appConfig['app-common'] + '/CloudUtility/services/LogService?wsdl';

module.exports = function (req, res) {
	return {
		

			"createBaTable": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "createBaTable", args, callback, req, res);
			},
			

			"getAllBaTasks": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getAllBaTasks", args, callback, req, res);
			},
			

			"getDeptLogCount": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getDeptLogCount", args, callback, req, res);
			},
			

			"getLogCountByDeptId": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getLogCountByDeptId", args, callback, req, res);
			},
			

			"getLogCountByModuleTypeAndUnit": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getLogCountByModuleTypeAndUnit", args, callback, req, res);
			},
			

			"getModuleTypes": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getModuleTypes", args, callback, req, res);
			},
			

			"getModulesLogCount": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getModulesLogCount", args, callback, req, res);
			},
			

			"getOperationTypes": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getOperationTypes", args, callback, req, res);
			},
			

			"getRecentTasks": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getRecentTasks", args, callback, req, res);
			},
			

			"logScanFile": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "logScanFile", args, callback, req, res);
			},
			

			"queryLog": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "queryLog", args, callback, req, res);
			},
			

			"recordLog": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "recordLog", args, callback, req, res);
			},
			

			"uploadBaTable": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "uploadBaTable", args, callback, req, res);
			},
			

		url: 'http://' + appConfig['app-common'] + '/CloudUtility/services/LogService?wsdl'
	}

}