// Generated by method-generator.js. DOT NOT MODIFY!ยฃยก

var _ = require('underscore');
var path = require('path');
var jws = require(path.join(process.cwd(), 'utils/jws'));
var appConfig = require('../config.js');
var url = 'http://' + appConfig['app-common'] + '/CloudMessage/services/MessageService?wsdl';

module.exports = function (req, res) {
	return {
		

			"deleteMessage": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "deleteMessage", args, callback, req, res);
			},
			

			"deleteNotice": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "deleteNotice", args, callback, req, res);
			},
			

			"getMessage": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getMessage", args, callback, req, res);
			},
			

			"getMessageContent": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getMessageContent", args, callback, req, res);
			},
			

			"getMessageStat": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getMessageStat", args, callback, req, res);
			},
			

			"getUserSendedNotice": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getUserSendedNotice", args, callback, req, res);
			},
			

			"getUserSendedNoticeDetail": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "getUserSendedNoticeDetail", args, callback, req, res);
			},
			

			"sendMessage": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "sendMessage", args, callback, req, res);
			},
			

			"setMessageLabel": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "setMessageLabel", args, callback, req, res);
			},
			

			"setMessageReadState": function (args, callback) {
				if (_.isFunction(args)) {
					callback = args;
					args = {};
				}
				return jws(url, "setMessageReadState", args, callback, req, res);
			},
			

		url: 'http://' + appConfig['app-common'] + '/CloudMessage/services/MessageService?wsdl'
	}

}